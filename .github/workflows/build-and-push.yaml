name: Build and push

on:
  push:
    branches:
      - main
  workflow_dispatch:
  pull_request:

env:
  TARGET_PLATFORMS: linux/amd64, linux/arm64
jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: '3.13'
          cache: 'pip'

      - run: pip install poetry==2.1.3

      - name: Cache dependencies
        uses: actions/cache@v4
        with:
          path: .venv
          key: ${{ runner.arch }}-venv-${{ hashFiles('poetry.lock') }}
          restore-keys: |
            ${{ runner.arch }}-venv-

      - run: poetry install

      - run: make lint

  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write
      packages: write

    needs:
      - lint

    steps:
      - uses: actions/checkout@v4

      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ github.repository_owner }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Login to GitHub container registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
        with:
          platforms: ${{ env.TARGET_PLATFORMS }}

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v3

      - name: Docker metadata
        id: docker_metadata
        uses: docker/metadata-action@v5
        with:
          images: |
            ${{ github.repository_owner }}/better-whoami
            ghcr.io/${{ github.repository_owner }}/better-whoami
          tags: |
            type=sha
            type=ref,event=tag
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
            type=schedule
          flavor: |
            latest=true

      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v6
        with:
          context: ./
          file: ./Dockerfile
          platforms: ${{ env.TARGET_PLATFORMS }}
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.docker_metadata.outputs.tags }}
          labels: ${{ steps.docker_metadata.outputs.labels }}
